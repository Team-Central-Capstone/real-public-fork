-- MySQL Script generated by MySQL Workbench
-- Sun Apr 10 21:18:32 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema capstone
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema capstone
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `capstone` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `capstone` ;

-- -----------------------------------------------------
-- Table `capstone`.`Analytics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Analytics` (
  `Id` CHAR(36) CHARACTER SET 'ascii' NOT NULL,
  `StartTimestamp` DATETIME(6) NOT NULL,
  `EndTimestamp` DATETIME(6) NOT NULL DEFAULT '0001-01-01 00:00:00.000000',
  `UserName` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Area` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Controller` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Action` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `FirebaseUserId` VARCHAR(36) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Host` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `IPv4` VARCHAR(100) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `IPv6` VARCHAR(100) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Namespace` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Path` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `QueryString` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `AnalyticErrorId` CHAR(36) CHARACTER SET 'ascii' NULL DEFAULT NULL,
  `AnalyticDetailId` CHAR(36) CHARACTER SET 'ascii' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`AnalyticDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`AnalyticDetails` (
  `Id` CHAR(36) CHARACTER SET 'ascii' NOT NULL,
  `AnalyticId` CHAR(36) CHARACTER SET 'ascii' NOT NULL,
  `Message` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  CONSTRAINT `FK_AnalyticDetails_Analytics_Id`
    FOREIGN KEY (`Id`)
    REFERENCES `capstone`.`Analytics` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`AnalyticErrors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`AnalyticErrors` (
  `Id` CHAR(36) CHARACTER SET 'ascii' NOT NULL,
  `AnalyticId` CHAR(36) CHARACTER SET 'ascii' NOT NULL,
  `TraceId` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `RequestId` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `TraceIdentifier` VARCHAR(200) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Message` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `StackTrace` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  CONSTRAINT `FK_AnalyticErrors_Analytics_Id`
    FOREIGN KEY (`Id`)
    REFERENCES `capstone`.`Analytics` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`AppSettings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`AppSettings` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `AppSettingType` INT NOT NULL,
  `Value` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Setting` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`Emails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Emails` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Timestamp` DATETIME(6) NOT NULL,
  `From` VARCHAR(254) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `To` VARCHAR(254) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Subject` VARCHAR(998) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Body` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
AUTO_INCREMENT = 363
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`Locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Locations` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Timestamp` DATETIME(6) NOT NULL,
  `FirebaseUserId` VARCHAR(36) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Latitude` DOUBLE NOT NULL,
  `Longitude` DOUBLE NOT NULL,
  `Source` INT NOT NULL DEFAULT '0',
  `DeviceID` VARCHAR(64) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `RollingAverageSpeed` DOUBLE NOT NULL DEFAULT '0',
  `SpeedFromLast` DOUBLE NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id`),
  INDEX `IX_Locations` (`FirebaseUserId` ASC, `Timestamp` ASC, `Latitude` ASC, `Longitude` ASC) VISIBLE,
  INDEX `IX_Locations_FirebaseUserId` (`FirebaseUserId` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 5334971
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`Precalc_Locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Precalc_Locations` (
  `Id` BIGINT NOT NULL AUTO_INCREMENT,
  `FirebaseUserId` VARCHAR(34) NOT NULL,
  `Latitude` DOUBLE NOT NULL,
  `Longitude` DOUBLE NOT NULL,
  `StartTime` DATETIME(6) NOT NULL,
  `EndTime` DATETIME(6) NOT NULL,
  `trace` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_Locations_Id` USING BTREE (`FirebaseUserId`) VISIBLE,
  INDEX `IX_Locations_Times` USING BTREE (`StartTime`, `EndTime`) VISIBLE,
  INDEX `IX_Locations_Coordinates` USING BTREE (`Latitude`, `Longitude`) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 253836
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserBodyTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserBodyTypes` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserGenders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserGenders` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(30) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Users` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `RegisteredTimestamp` DATETIME(6) NOT NULL,
  `FirebaseUserId` VARCHAR(36) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Active` TINYINT(1) NOT NULL DEFAULT '0',
  `Birthdate` DATETIME(6) NULL DEFAULT NULL,
  `FirstName` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `LastLoginTimestamp` DATETIME(6) NOT NULL DEFAULT '0001-01-01 00:00:00.000000',
  `LastName` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `PreferredName` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `ProfileLastUpdatedTimestamp` DATETIME(6) NULL DEFAULT NULL,
  `UserGenderId` INT NULL DEFAULT NULL,
  `UserBodyTypeId` INT NULL DEFAULT NULL,
  `HeightInches` INT NOT NULL DEFAULT '0',
  `ProfileIntro` VARCHAR(1000) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Email` VARCHAR(320) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `FirebaseUserId_UNIQUE` (`FirebaseUserId` ASC) VISIBLE,
  INDEX `IX_Users_UserGenderId` (`UserGenderId` ASC) VISIBLE,
  INDEX `IX_Users_UserBodyTypeId` (`UserBodyTypeId` ASC) VISIBLE,
  CONSTRAINT `FK_Users_UserBodyTypes_UserBodyTypeId`
    FOREIGN KEY (`UserBodyTypeId`)
    REFERENCES `capstone`.`UserBodyTypes` (`Id`)
    ON DELETE RESTRICT,
  CONSTRAINT `FK_Users_UserGenders_UserGenderId`
    FOREIGN KEY (`UserGenderId`)
    REFERENCES `capstone`.`UserGenders` (`Id`)
    ON DELETE RESTRICT)
ENGINE = InnoDB
AUTO_INCREMENT = 9470
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`Precalc_ProfileMatches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Precalc_ProfileMatches` (
  `Id` BIGINT NOT NULL AUTO_INCREMENT,
  `lUserId` INT NOT NULL,
  `rUserId` INT NOT NULL,
  `TotalPossibleQuestions` BIGINT NOT NULL,
  `MatchedQuestions` INT NOT NULL,
  `RawMatchPercentage` DECIMAL(9,8) NOT NULL,
  `WeightedMatchPercentage` DECIMAL(9,8) NOT NULL,
  `Timestamp` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  INDEX `IX_Precalc_ProfileMatches_Id` (`Id` ASC) VISIBLE,
  INDEX `IX_Precalc_ProfileMatches_UserKeys` (`lUserId` ASC, `rUserId` ASC) VISIBLE,
  INDEX `FK_Precalc_ProfileMatches_rUserId` (`rUserId` ASC) VISIBLE,
  CONSTRAINT `FK_Precalc_ProfileMatches_lUserId`
    FOREIGN KEY (`lUserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_Precalc_ProfileMatches_rUserId`
    FOREIGN KEY (`rUserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 4505762
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`SurveyQuestions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`SurveyQuestions` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `QuestionType` INT NOT NULL,
  `QuestionText` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Order` INT NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
AUTO_INCREMENT = 32
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`SurveyAnswers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`SurveyAnswers` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `SurveyQuestionId` INT NOT NULL,
  `AnswerText` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_SurveyAnswers_SurveyQuestionId` (`SurveyQuestionId` ASC) VISIBLE,
  CONSTRAINT `FK_SurveyAnswers_SurveyQuestions_SurveyQuestionId`
    FOREIGN KEY (`SurveyQuestionId`)
    REFERENCES `capstone`.`SurveyQuestions` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 62
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserSurveyResponses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserSurveyResponses` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `UserId` INT NOT NULL,
  `SurveyQuestionId` INT NOT NULL,
  `SurveyAnswerResponse` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `UserSurveyResponseWeight` INT NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id`),
  INDEX `IX_UserSurveyResponses_SurveyQuestionId` (`SurveyQuestionId` ASC) VISIBLE,
  INDEX `IX_UserSurveyResponses_UserId` (`UserId` ASC) VISIBLE,
  INDEX `IX_UserSurveyResponses` (`UserId` ASC, `SurveyQuestionId` ASC) VISIBLE,
  CONSTRAINT `FK_UserSurveyResponses_SurveyQuestions_SurveyQuestionId`
    FOREIGN KEY (`SurveyQuestionId`)
    REFERENCES `capstone`.`SurveyQuestions` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_UserSurveyResponses_Users_UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 79499
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`SurveyAnswerUserSurveyResponse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`SurveyAnswerUserSurveyResponse` (
  `SurveyAnswersId` INT NOT NULL,
  `UserSurveyResponsesId` INT NOT NULL,
  PRIMARY KEY (`SurveyAnswersId`, `UserSurveyResponsesId`),
  INDEX `IX_SurveyAnswerUserSurveyResponse_UserSurveyResponsesId` (`UserSurveyResponsesId` ASC) VISIBLE,
  CONSTRAINT `FK_SurveyAnswerUserSurveyResponse_SurveyAnswers_SurveyAnswersId`
    FOREIGN KEY (`SurveyAnswersId`)
    REFERENCES `capstone`.`SurveyAnswers` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_SurveyAnswerUserSurveyResponse_UserSurveyResponses_UserSurve~`
    FOREIGN KEY (`UserSurveyResponsesId`)
    REFERENCES `capstone`.`UserSurveyResponses` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserAttractedGenders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserAttractedGenders` (
  `GendersAttractedToId` INT NOT NULL,
  `UserAttractedToId` INT NOT NULL,
  PRIMARY KEY (`GendersAttractedToId`, `UserAttractedToId`),
  INDEX `IX_UserAttractedGenders_UserAttractedToId` (`UserAttractedToId` ASC) VISIBLE,
  CONSTRAINT `FK_UserAttractedGenders_UserGenders_GendersAttractedToId`
    FOREIGN KEY (`GendersAttractedToId`)
    REFERENCES `capstone`.`UserGenders` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_UserAttractedGenders_Users_UserAttractedToId`
    FOREIGN KEY (`UserAttractedToId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserBlocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserBlocks` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `UserId` INT NOT NULL,
  `BlockedUserId` INT NOT NULL,
  `BlockedOnDate` DATETIME(6) NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_UserBlocks_BlockedUserId` (`BlockedUserId` ASC) VISIBLE,
  INDEX `IX_UserBlocks_UserId` (`UserId` ASC) VISIBLE,
  CONSTRAINT `FK_UserBlocks_Users_BlockedUserId`
    FOREIGN KEY (`BlockedUserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_UserBlocks_Users_UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserImages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserImages` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `UserId` INT NOT NULL,
  `IsProfilePhoto` TINYINT(1) NOT NULL,
  `FileName` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `Description` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `UploadDate` DATETIME(6) NOT NULL,
  `Image` LONGBLOB NULL DEFAULT NULL,
  `ContentType` VARCHAR(32) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_UserImages_UserId` (`UserId` ASC) VISIBLE,
  CONSTRAINT `FK_UserImages_Users_UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 58
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserMatches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserMatches` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `UserId1` INT NOT NULL,
  `UserId2` INT NOT NULL,
  `MatchedOnDate` DATETIME(6) NOT NULL,
  `User1AcceptedDate` DATETIME(6) NULL DEFAULT NULL,
  `User2AcceptedDate` DATETIME(6) NULL DEFAULT NULL,
  `MatchedLatitude` DOUBLE NOT NULL,
  `MatchedLongitude` DOUBLE NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_UserMatches_UserId1` (`UserId1` ASC) VISIBLE,
  INDEX `IX_UserMatches_UserId2` (`UserId2` ASC) VISIBLE,
  CONSTRAINT `FK_UserMatches_Users_UserId1`
    FOREIGN KEY (`UserId1`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_UserMatches_Users_UserId2`
    FOREIGN KEY (`UserId2`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`UserMessages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`UserMessages` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `UserId1` INT NOT NULL,
  `UserId2` INT NOT NULL,
  `Timestamp` DATETIME(6) NOT NULL,
  `Message` LONGTEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,
  `MessageRead` TINYINT(1) NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `IX_UserMessages_UserId1` (`UserId1` ASC) VISIBLE,
  INDEX `IX_UserMessages_UserId2` (`UserId2` ASC) VISIBLE,
  CONSTRAINT `FK_UserMessages_Users_UserId1`
    FOREIGN KEY (`UserId1`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_UserMessages_Users_UserId2`
    FOREIGN KEY (`UserId2`)
    REFERENCES `capstone`.`Users` (`Id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`__EFMigrationsHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`__EFMigrationsHistory` (
  `MigrationId` VARCHAR(150) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  `ProductVersion` VARCHAR(32) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NOT NULL,
  PRIMARY KEY (`MigrationId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `capstone`.`location_trace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`location_trace` (
  `timestamp` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `data` MEDIUMTEXT NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `capstone` ;

-- -----------------------------------------------------
-- Placeholder table for view `capstone`.`Capstone_Information_Schema_Columns`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Capstone_Information_Schema_Columns` (`TABLE_CATALOG` INT, `TABLE_SCHEMA` INT, `TABLE_NAME` INT, `COLUMN_NAME` INT, `ORDINAL_POSITION` INT, `COLUMN_DEFAULT` INT, `IS_NULLABLE` INT, `DATA_TYPE` INT, `CHARACTER_MAXIMUM_LENGTH` INT, `CHARACTER_OCTET_LENGTH` INT, `NUMERIC_PRECISION` INT, `NUMERIC_SCALE` INT, `DATETIME_PRECISION` INT, `CHARACTER_SET_NAME` INT, `COLLATION_NAME` INT, `COLUMN_TYPE` INT, `COLUMN_KEY` INT, `EXTRA` INT, `PRIVILEGES` INT, `COLUMN_COMMENT` INT, `GENERATION_EXPRESSION` INT, `SRS_ID` INT);

-- -----------------------------------------------------
-- Placeholder table for view `capstone`.`Capstone_Information_Schema_Tables`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`Capstone_Information_Schema_Tables` (`TABLE_CATALOG` INT, `TABLE_SCHEMA` INT, `TABLE_NAME` INT, `TABLE_TYPE` INT, `ENGINE` INT, `VERSION` INT, `ROW_FORMAT` INT, `TABLE_ROWS` INT, `AVG_ROW_LENGTH` INT, `DATA_LENGTH` INT, `MAX_DATA_LENGTH` INT, `INDEX_LENGTH` INT, `DATA_FREE` INT, `AUTO_INCREMENT` INT, `CREATE_TIME` INT, `UPDATE_TIME` INT, `CHECK_TIME` INT, `TABLE_COLLATION` INT, `CHECKSUM` INT, `CREATE_OPTIONS` INT, `TABLE_COMMENT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `capstone`.`v_UserMatches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `capstone`.`v_UserMatches` (`SurveyQuestionId` INT, `QuestionType` INT, `QuestionText` INT, `lUserId` INT, `rUserId` INT, `ResponsesMatch` INT, `Scale` INT, `lSurveyAnswerId` INT, `rSurveyAnswerId` INT, `lSurveyAnswerResponse` INT, `rSurveyAnswerResponse` INT, `lUserSurveyResponseWeight` INT, `rUserSurveyResponseWeight` INT);

-- -----------------------------------------------------
-- function DistanceBetweenPoints
-- -----------------------------------------------------

DELIMITER $$
USE `capstone`$$
CREATE DEFINER=`admin`@`%` FUNCTION `DistanceBetweenPoints`(lat1 double, lon1 double, lat2 double, lon2 double) RETURNS double
    DETERMINISTIC
BEGIN
	-- RETURN ST_Distance_Sphere(point(lat1, lon1), point(lat2, lon2));
	--     return 111.111 *
	-- 		DEGREES(ACOS(LEAST(1.0, COS(RADIANS(lat1))
	-- 			 * COS(RADIANS(lon2))
	-- 			 * COS(RADIANS(lon1 - lon2))
	-- 			 + SIN(RADIANS(lat1))
	-- 			 * SIN(RADIANS(lat2)))));

	-- https://www.movable-type.co.uk/scripts/latlong.html
	set @R = 6371e3; -- metres
    set @PI = 3.141592653589793;
	set @phi1 = lat1 * @PI / 180.0;
	set @phi2 = lat2 * @PI / 180.0;
	set @dPhi = (lat2-lat1) * @PI / 180.0;
	set @dLambda = (lon2-lon1) * @PI / 180.0;

	set @a =  sin(@dPhi/2) * sin(@dPhi/2) +
			  cos(@phi1) * cos(@phi2) *
			  sin(@dLambda / 2.0) * sin(@dLambda / 2.0);
	set @c = 2.0 * atan2(sqrt(@a), sqrt(1.0 - @a));

	set @d = @R * @c; -- in metres
    
    return @d;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_CalculateMatches
-- -----------------------------------------------------

DELIMITER $$
USE `capstone`$$
CREATE DEFINER=`admin`@`%` PROCEDURE `sp_CalculateMatches`(
	firebaseUserId varchar(36),
	startTime datetime,
	endTime datetime,
	rangeMiles double,
    timespan time
)
begin    

	drop temporary table if exists distance_results;

	create temporary table distance_results
	select *
	from (
		select
			 case
				when l.StartTime <= r.StartTime and l.EndTime <= r.EndTime then r.StartTime  -- 'left partial'
				when r.StartTime <= l.StartTime and r.EndTime <= l.EndTime then l.StartTime -- 'right partial'
				when r.StartTime < l.StartTime and l.EndTime < r.EndTime then l.StartTime -- 'right contains left'
				when l.StartTime < r.StartTime and r.EndTime < l.EndTime then r.StartTime -- 'left contains right'
				when l.StartTime = r.StartTime and l.EndTime = r.EndTime then l.StartTime -- 'equal'
			 end as 'start_time'
			,case
				when l.StartTime <= r.StartTime and l.EndTime <= r.EndTime then l.EndTime -- 'left partial'
				when r.StartTime <= l.StartTime and r.EndTime <= l.EndTime then r.EndTime -- 'right partial'
				when r.StartTime < l.StartTime and l.EndTime < r.EndTime then l.EndTime -- 'right contains left'
				when l.StartTime < r.StartTime and r.EndTime < l.EndTime then r.EndTime -- 'left contains right'
				when l.StartTime = r.StartTime and l.EndTime = r.EndTime then l.EndTime -- 'equal'
			 end as 'end_time'
			,cast(null as time) as 'overlaptime'
			,ST_Distance_Sphere(point(l.latitude, l.longitude), point(r.latitude, r.longitude)) * .000621371192 as 'miles'
			,l.latitude as 'lLatitude'
			,l.longitude as 'lLongitude'
			,r.latitude as 'rLatitude'
			,r.longitude as 'rLongitude'
			,l.FirebaseUserId as 'lFirebaseUserId'
			,r.FirebaseUserId as 'rFirebaseUserId'
			,l.starttime as 'lStartTime'
			,l.endtime as 'lEndTime'
			,r.starttime as 'rStartTime'
			,r.endtime as 'rEndTime'
		from
			(
				select *
                from Precalc_Locations p1
				where p1.FirebaseUserId = firebaseUserId and p1.starttime between startTime and endTime
            ) l
			inner join (
				select *
                from Precalc_Locations p2
				where p2.FirebaseUserId != firebaseUserId and p2.starttime between startTime and endTime
            ) r on (
				   l.starttime between r.starttime and r.endtime
				or r.starttime between l.starttime and l.endtime
				or l.endtime between r.starttime and r.endtime
				or r.endtime between l.starttime and l.endtime
				or l.starttime = r.starttime
				or l.endtime = r.endtime
			)
	) x;

	update distance_results
    set overlaptime = timediff(start_time, end_time);

	select
		 pm.RawMatchPercentage
		,pm.WeightedMatchPercentage
        ,pm.Timestamp as 'MatchCalculcatedTimestamp'
		,lu.Id as 'lUserId'
        ,ru.Id as 'rUserId'
		,r.*
    from
		distance_results r
        
        inner join Users lu on r.lFirebaseUserId=lu.FirebaseUserId
        inner join UserAttractedGenders luag on lu.Id = luag.UserAttractedToId
        inner join UserGenders lug on luag.GendersAttractedToId = lug.Id
        
        inner join Users ru on r.rFirebaseUserId=ru.FirebaseUserId
		inner join UserAttractedGenders ruag on ru.Id = ruag.UserAttractedToId
        inner join UserGenders rug on ruag.GendersAttractedToId = rug.Id
        
        left join Precalc_ProfileMatches pm on lu.Id = pm.lUserId and ru.Id = pm.rUserId
    where
		r.miles <= rangeMiles
        and r.overlaptime >= timespan
        and luag.GendersAttractedToId = ru.UserGenderId
        and ruag.GendersAttractedToId = lu.UserGenderId
        
	order by r.miles, r.overlaptime;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_ProcessLocationRecord
-- -----------------------------------------------------

DELIMITER $$
USE `capstone`$$
CREATE DEFINER=`admin`@`%` PROCEDURE `sp_ProcessLocationRecord`(
	newFirebaseUserId varchar(36),
	newLatitude double,
	newLongitude double,
	newTimestamp datetime
)
begin    
	set @debug := 0;
    
	-- insert into location_trace (data) values (
-- 		concat(
-- 			'sp_ProcessLocationRecord('
--             ,newFirebaseUserId, ', '
--             ,newLatitude, ', '
--             ,newLongitude, ', '
--             ,newTimestamp
--             ,')'
--         )
-- 	);
    
    
	select Value into @round from AppSettings where Setting = 'GPSRoundDecimalPlaces';
    select 0.5 into @tolerance;

	-- last rollup record
	select l.Id, l.Latitude, l.Longitude, l.EndTime
	into @id, @latitude, @longitude, @timestamp
    from Precalc_Locations l
    where FirebaseUserId = newFirebaseUserId
    order by Id desc
    limit 1;
    
    -- last raw location record
    select l.Id, l.Latitude, l.Longitude, l.Timestamp
	into @prevId, @prevLatitude, @prevLongitude, @prevTimestamp
    from Locations l
    where FirebaseUserId = newFirebaseUserId
    order by Id desc
    limit 1;
    
    select abs((DistanceBetweenPoints(@latitude, @longitude, @prevLatitude, @prevLongitude) / 1000.0 * 0.62137) / (timestampdiff(microsecond, @prevTimestamp, @timestamp) / 1000.0 / 1000.0 / 3600.0))
    into @speedfromlast;
    
    select avg(MpH) over (order by Id rows 10 preceding)
    into @rollingaverage
	from (
		select *, abs((DistanceBetweenPoints(Latitude, Longitude, PrevLatitude, PrevLongitude) / 1000.0 * 0.62137) / (timestampdiff(microsecond, prevTimestamp, timestamp) / 1000.0 / 1000.0 / 3600.0)) as MpH
		from (
			select
				 *
				,lag(Id) over(order by Id) as prevId
				,lag(Timestamp) over(order by Id) as prevTimestamp
				,lag(Latitude) over(order by Id) as prevLatitude
				,lag(Longitude) over(order by Id) as prevLongitude
			from (
				select *
				from Locations
				where FirebaseUserId=newFirebaseUserId
				order by id desc
				limit 10
			) x1
			order by id
		) x2
	) x3
	order by timestamp desc
	limit 1;
    
    select case
		when @id is null then 1
		when @speedfromlast between (@tolerance * @rollingaverage) and ((1.0 + @tolerance) * @rollingaverage) then 1
        else 0
    end
    into @insertingrecord;
    
-- 	insert into location_trace (data) values (concat('@round = ', coalesce(@round, ''), ' '));
-- 	insert into location_trace (data) values (concat('@tolerance = ', coalesce(@tolerance, ''), ' '));
-- 	insert into location_trace (data) values (concat('@id = ', coalesce(@id, ''), ' '));
-- 	insert into location_trace (data) values (concat('@latitude = ', coalesce(@latitude, ''), ' '));
-- 	insert into location_trace (data) values (concat('@longitude = ', coalesce(@longitude, ''), ' '));
-- 	insert into location_trace (data) values (concat('@timestamp = ', coalesce(@timestamp, ''), ' '));
-- 	insert into location_trace (data) values (concat('@prevId = ', coalesce(@prevId, ''), ' '));
-- 	insert into location_trace (data) values (concat('@prevLatitude = ', coalesce(@prevLatitude, ''), ' '));
-- 	insert into location_trace (data) values (concat('@prevLongitude = ', coalesce(@prevLongitude, ''), ' '));
-- 	insert into location_trace (data) values (concat('@prevTimestamp = ', coalesce(@prevTimestamp, ''), ' '));
-- 	insert into location_trace (data) values (concat('@speedfromlast = ', coalesce(@speedfromlast, ''), ' '));
-- 	insert into location_trace (data) values (concat('@rollingaverage = ', coalesce(@rollingaverage, ''), ' '));
-- 	insert into location_trace (data) values (concat('@speedmin = ', coalesce((@tolerance * @rollingaverage), ''), ' '));
-- 	insert into location_trace (data) values (concat('@speedmax = ', coalesce(((1.0 + @tolerance) * @rollingaverage), ''), ' '));
-- 	insert into location_trace (data) values (concat('@insertingrecord = ', coalesce(@insertingrecord, '')));

    if @insertingrecord = 1 then
		if @id is null then
			-- first record for user
			insert into Precalc_Locations (FirebaseUserId, Latitude, Longitude, StartTime, EndTime) values (newFirebaseUserId, round(newLatitude, @round), round(newLongitude, @round), newTimestamp, newTimestamp);
            
--             if @debug = 1 then select 'insert first record for user'; end if;
		elseif @latitude = round(newLatitude, @round) and @longitude = round(newLongitude, @round) then
			update Precalc_Locations set EndTime = newTimestamp where Id = @Id;
-- 			if @debug = 1 then select 'update existing record'; end if;
		else
			insert into Precalc_Locations (FirebaseUserId, Latitude, Longitude, StartTime, EndTime) values (newFirebaseUserId, round(newLatitude, @round), round(newLongitude, @round), newTimestamp, newTimestamp);
-- 			if @debug = 1 then select 'insert new location record'; end if;
		end if;
	end if;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_ProcessLocations
-- -----------------------------------------------------

DELIMITER $$
USE `capstone`$$
CREATE DEFINER=`admin`@`%` PROCEDURE `sp_ProcessLocations`(
	round int
)
begin
	declare userid varchar(30);
    declare finished int default 0;
    declare result bigint default 0;
	declare user_cursor cursor for
		select FirebaseUserId
        from Locations
        group by FirebaseUserId;
	declare continue handler for not found set finished := 1;
	
    set round := ifnull(round, 4);
    
    open user_cursor;
	cursor_loop: loop
		fetch user_cursor into userid;
		if finished = 1 then leave cursor_loop; end if;
		
        
		insert into Locations_Processed
		with
		basedata as (
			select
				 FirebaseUserId
				,Timestamp
				,cast(round(latitude, round) as float) as Latitude
				,cast(round(longitude, round) as float) as Longitude
			
				,lag(FirebaseUserId, 1) over () as PrevFirebaseUserId
				,lag(cast(round(Latitude, round) as float), 1) over () as PrevLatitude
				,lag(cast(round(Longitude, round) as float), 1) over () as PrevLongitude
				
			from Locations
			where firebaseuserid = userid -- 'testuser-0000001' -- '109409728062644297175'
			order by FirebaseUserId, Timestamp
		)
		,ranks as (
			select *
				,case
					when PrevFirebaseUserId is null then (select @n := 1)
					when (FirebaseUserId = PrevFirebaseUserId) and (Latitude = PrevLatitude) and (Longitude = PrevLongitude) then @n := @n + 1
					else @n := 1
				end as n
				,case
					when PrevFirebaseUserId is null then (select @r := 1)
					when (FirebaseUserId = PrevFirebaseUserId) and (Latitude = PrevLatitude) and (Longitude = PrevLongitude) then @r := @r
					else @r := @r + 1
				end as r
				from basedata
				order by FirebaseUserId, Timestamp
		)
		,maxrowperrank as (
			select
				 FirebaseUserId
				,cast(r as signed) as r
				,cast(max(n) as signed) as n
			from ranks
			group by FirebaseUserId, r
			having cast(max(n) as signed) > 1
		)
		,minandmaxperrank as (
			select
				 ranks.*
				,case when ranks.n != 1 then lag(Timestamp, 1) over (partition by ranks.FirebaseUserId order by ranks.FirebaseUserId, ranks.r, ranks.n) end as 'PrevTimestamp'
			from
				ranks
				inner join maxrowperrank on ranks.FirebaseUserId=maxrowperrank.FirebaseUserId
										and ranks.r=maxrowperrank.r
										and (ranks.n=maxrowperrank.n or ranks.n=1)
			order by ranks.FirebaseUserId, cast(ranks.r as signed), cast(ranks.n as signed)
		)
		select
			 @now
			,FirebaseUserId
			,Latitude
			,Longitude
			,PrevTimestamp as 'StartTime'
			,Timestamp as 'EndTime'
			,cast(time_format(timediff(Timestamp, PrevTimestamp),'%H') as signed) as 'H'
			,cast(time_format(timediff(Timestamp, PrevTimestamp),'%i') as signed) as 'M'
			,cast(time_format(timediff(Timestamp, PrevTimestamp),'%s') as signed) as 'S'
			,n as 'RecordsAtLocation'
			,current_timestamp()
		from minandmaxperrank
		where PrevTimestamp is not null;
		
		set result := result + found_rows();
		
	end loop cursor_loop;
	close user_cursor;

	select result;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_RecalculateProfileMatch
-- -----------------------------------------------------

DELIMITER $$
USE `capstone`$$
CREATE DEFINER=`admin`@`%` PROCEDURE `sp_RecalculateProfileMatch`(userId int)
begin
	delete from Precalc_ProfileMatches where lUserId = userId or rUserId = userId;
    
    insert into Precalc_ProfileMatches (lUserId, rUserId, TotalPossibleQuestions, MatchedQuestions, RawMatchPercentage, WeightedMatchPercentage)
	select
		 lUserId
		,rUserId
		,count(*) as TotalPossibleQuestions
		,sum(ResponsesMatch) as MatchedQuestions
		,(count(ResponsesMatch)) / count(*) as RawMatchPercentage
		,sum(case when ResponsesMatch=1 then Scale else 0 end) / count(*) as WeightedMatchPercentage
	from v_UserMatches
	where lUserId = userId
	group by
		 lUserId
		,rUserId
	union all
    select
		 rUserId
		,lUserId
		,count(*) as TotalPossibleQuestions
		,sum(ResponsesMatch) as MatchedQuestions
		,(count(ResponsesMatch)) / count(*) as RawMatchPercentage
		,sum(case when ResponsesMatch=1 then Scale else 0 end) / count(*) as WeightedMatchPercentage
	from v_UserMatches
	where lUserId = userId
	group by
		 lUserId
		,rUserId;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- View `capstone`.`Capstone_Information_Schema_Columns`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone`.`Capstone_Information_Schema_Columns`;
USE `capstone`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`admin`@`%` SQL SECURITY DEFINER VIEW `capstone`.`Capstone_Information_Schema_Columns` AS select `information_schema`.`COLUMNS`.`TABLE_CATALOG` AS `TABLE_CATALOG`,`information_schema`.`COLUMNS`.`TABLE_SCHEMA` AS `TABLE_SCHEMA`,`information_schema`.`COLUMNS`.`TABLE_NAME` AS `TABLE_NAME`,`information_schema`.`COLUMNS`.`COLUMN_NAME` AS `COLUMN_NAME`,`information_schema`.`COLUMNS`.`ORDINAL_POSITION` AS `ORDINAL_POSITION`,`information_schema`.`COLUMNS`.`COLUMN_DEFAULT` AS `COLUMN_DEFAULT`,`information_schema`.`COLUMNS`.`IS_NULLABLE` AS `IS_NULLABLE`,`information_schema`.`COLUMNS`.`DATA_TYPE` AS `DATA_TYPE`,`information_schema`.`COLUMNS`.`CHARACTER_MAXIMUM_LENGTH` AS `CHARACTER_MAXIMUM_LENGTH`,`information_schema`.`COLUMNS`.`CHARACTER_OCTET_LENGTH` AS `CHARACTER_OCTET_LENGTH`,`information_schema`.`COLUMNS`.`NUMERIC_PRECISION` AS `NUMERIC_PRECISION`,`information_schema`.`COLUMNS`.`NUMERIC_SCALE` AS `NUMERIC_SCALE`,`information_schema`.`COLUMNS`.`DATETIME_PRECISION` AS `DATETIME_PRECISION`,`information_schema`.`COLUMNS`.`CHARACTER_SET_NAME` AS `CHARACTER_SET_NAME`,`information_schema`.`COLUMNS`.`COLLATION_NAME` AS `COLLATION_NAME`,`information_schema`.`COLUMNS`.`COLUMN_TYPE` AS `COLUMN_TYPE`,`information_schema`.`COLUMNS`.`COLUMN_KEY` AS `COLUMN_KEY`,`information_schema`.`COLUMNS`.`EXTRA` AS `EXTRA`,`information_schema`.`COLUMNS`.`PRIVILEGES` AS `PRIVILEGES`,`information_schema`.`COLUMNS`.`COLUMN_COMMENT` AS `COLUMN_COMMENT`,`information_schema`.`COLUMNS`.`GENERATION_EXPRESSION` AS `GENERATION_EXPRESSION`,`information_schema`.`COLUMNS`.`SRS_ID` AS `SRS_ID` from `information_schema`.`COLUMNS` order by `information_schema`.`COLUMNS`.`TABLE_CATALOG`,`information_schema`.`COLUMNS`.`TABLE_SCHEMA`,`information_schema`.`COLUMNS`.`TABLE_NAME`,`information_schema`.`COLUMNS`.`ORDINAL_POSITION`;

-- -----------------------------------------------------
-- View `capstone`.`Capstone_Information_Schema_Tables`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone`.`Capstone_Information_Schema_Tables`;
USE `capstone`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`admin`@`%` SQL SECURITY DEFINER VIEW `capstone`.`Capstone_Information_Schema_Tables` AS select `information_schema`.`TABLES`.`TABLE_CATALOG` AS `TABLE_CATALOG`,`information_schema`.`TABLES`.`TABLE_SCHEMA` AS `TABLE_SCHEMA`,`information_schema`.`TABLES`.`TABLE_NAME` AS `TABLE_NAME`,`information_schema`.`TABLES`.`TABLE_TYPE` AS `TABLE_TYPE`,`information_schema`.`TABLES`.`ENGINE` AS `ENGINE`,`information_schema`.`TABLES`.`VERSION` AS `VERSION`,`information_schema`.`TABLES`.`ROW_FORMAT` AS `ROW_FORMAT`,`information_schema`.`TABLES`.`TABLE_ROWS` AS `TABLE_ROWS`,`information_schema`.`TABLES`.`AVG_ROW_LENGTH` AS `AVG_ROW_LENGTH`,`information_schema`.`TABLES`.`DATA_LENGTH` AS `DATA_LENGTH`,`information_schema`.`TABLES`.`MAX_DATA_LENGTH` AS `MAX_DATA_LENGTH`,`information_schema`.`TABLES`.`INDEX_LENGTH` AS `INDEX_LENGTH`,`information_schema`.`TABLES`.`DATA_FREE` AS `DATA_FREE`,`information_schema`.`TABLES`.`AUTO_INCREMENT` AS `AUTO_INCREMENT`,`information_schema`.`TABLES`.`CREATE_TIME` AS `CREATE_TIME`,`information_schema`.`TABLES`.`UPDATE_TIME` AS `UPDATE_TIME`,`information_schema`.`TABLES`.`CHECK_TIME` AS `CHECK_TIME`,`information_schema`.`TABLES`.`TABLE_COLLATION` AS `TABLE_COLLATION`,`information_schema`.`TABLES`.`CHECKSUM` AS `CHECKSUM`,`information_schema`.`TABLES`.`CREATE_OPTIONS` AS `CREATE_OPTIONS`,`information_schema`.`TABLES`.`TABLE_COMMENT` AS `TABLE_COMMENT` from `information_schema`.`TABLES`;

-- -----------------------------------------------------
-- View `capstone`.`v_UserMatches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `capstone`.`v_UserMatches`;
USE `capstone`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`admin`@`%` SQL SECURITY DEFINER VIEW `capstone`.`v_UserMatches` AS select `l`.`SurveyQuestionId` AS `SurveyQuestionId`,`l`.`QuestionType` AS `QuestionType`,`l`.`QuestionText` AS `QuestionText`,`l`.`UserId` AS `lUserId`,`r`.`UserId` AS `rUserId`,(case when ((`l`.`SurveyQuestionId` = `r`.`SurveyQuestionId`) and ((`l`.`SurveyAnswerId` = `r`.`SurveyAnswerId`) or (`l`.`SurveyAnswerResponse` = `r`.`SurveyAnswerResponse`))) then 1.0 end) AS `ResponsesMatch`,(case when (`l`.`UserSurveyResponseWeight` = `r`.`UserSurveyResponseWeight`) then 1.0 else ((6.0 - abs((`l`.`UserSurveyResponseWeight` - `r`.`UserSurveyResponseWeight`))) / 6.0) end) AS `Scale`,`l`.`SurveyAnswerId` AS `lSurveyAnswerId`,`r`.`SurveyAnswerId` AS `rSurveyAnswerId`,`l`.`SurveyAnswerResponse` AS `lSurveyAnswerResponse`,`r`.`SurveyAnswerResponse` AS `rSurveyAnswerResponse`,`l`.`UserSurveyResponseWeight` AS `lUserSurveyResponseWeight`,`r`.`UserSurveyResponseWeight` AS `rUserSurveyResponseWeight` from ((select `usr`.`UserId` AS `UserId`,`usr`.`SurveyQuestionId` AS `SurveyQuestionId`,`sq`.`QuestionType` AS `QuestionType`,`sq`.`QuestionText` AS `QuestionText`,coalesce(`usr`.`SurveyAnswerResponse`,`sa`.`AnswerText`) AS `SurveyAnswerResponse`,`t`.`SurveyAnswersId` AS `SurveyAnswerId`,`usr`.`UserSurveyResponseWeight` AS `UserSurveyResponseWeight` from (((`capstone`.`SurveyQuestions` `sq` left join `capstone`.`UserSurveyResponses` `usr` on((`usr`.`SurveyQuestionId` = `sq`.`Id`))) left join `capstone`.`SurveyAnswerUserSurveyResponse` `t` on((`usr`.`Id` = `t`.`UserSurveyResponsesId`))) left join `capstone`.`SurveyAnswers` `sa` on((`t`.`SurveyAnswersId` = `sa`.`Id`))) where (`sq`.`QuestionType` in (2,3,5))) `l` left join (select `usr`.`UserId` AS `UserId`,`usr`.`SurveyQuestionId` AS `SurveyQuestionId`,`sq`.`QuestionType` AS `QuestionType`,`sq`.`QuestionText` AS `QuestionText`,coalesce(`usr`.`SurveyAnswerResponse`,`sa`.`AnswerText`) AS `SurveyAnswerResponse`,`t`.`SurveyAnswersId` AS `SurveyAnswerId`,`usr`.`UserSurveyResponseWeight` AS `UserSurveyResponseWeight` from (((`capstone`.`SurveyQuestions` `sq` left join `capstone`.`UserSurveyResponses` `usr` on((`usr`.`SurveyQuestionId` = `sq`.`Id`))) left join `capstone`.`SurveyAnswerUserSurveyResponse` `t` on((`usr`.`Id` = `t`.`UserSurveyResponsesId`))) left join `capstone`.`SurveyAnswers` `sa` on((`t`.`SurveyAnswersId` = `sa`.`Id`))) where (`sq`.`QuestionType` in (2,3,5))) `r` on(((`l`.`UserId` <> `r`.`UserId`) and (`l`.`SurveyQuestionId` = `r`.`SurveyQuestionId`)))) order by `l`.`UserId`,`l`.`SurveyQuestionId`,`l`.`SurveyAnswerId`;
USE `capstone`;

DELIMITER $$
USE `capstone`$$
CREATE
DEFINER=`admin`@`%`
TRIGGER `capstone`.`Locations_AFTER_INSERT`
AFTER INSERT ON `capstone`.`Locations`
FOR EACH ROW
BEGIN
	call sp_ProcessLocationRecord(new.FirebaseUserId, new.Latitude, new.Longitude, new.Timestamp);
END$$

USE `capstone`$$
CREATE
DEFINER=`admin`@`%`
TRIGGER `capstone`.`UserSurveyResponses_AFTER_INSERT`
AFTER INSERT ON `capstone`.`UserSurveyResponses`
FOR EACH ROW
BEGIN
	-- call sp_RecalculateProfileMatch(new.UserId);
END$$

USE `capstone`$$
CREATE
DEFINER=`admin`@`%`
TRIGGER `capstone`.`UserSurveyResponses_AFTER_UPDATE`
AFTER UPDATE ON `capstone`.`UserSurveyResponses`
FOR EACH ROW
BEGIN
	-- call sp_RecalculateProfileMatch(new.UserId);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
